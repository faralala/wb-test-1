/*
Посчитайте сколько раз можно вызвать функцию document.write() внутри document.write(). Объясните результат.
*/

function countDocumentWrite() {
	try {
		document.write('a')
		count++
		countDocumentWrite()
	} catch (error) {
		console.log('Переполнение стека!')
		console.log('Количество вызовов document.write:', count)
	}
}

countDocumentWrite()

//Максимальное количество вызовов функции document.write() внутри document.write() зависит от ограничений, накладываемых на размер стека вызовов JavaScript движком и ограничений браузера.

//Для данного задания я использовал решение из прошлой задачей с функцией рекурсии. вызов будет происходит до того пока у браузера не будет переполнен колл стек

/*
document.write("Начало<br>");

for (let i = 0; i < 10000; i++) {
  document.write("Hello, World!<br>");
}

document.write("Конец<br>");

В данном примере, когда мы вызываем document.write("Hello, World!<br>") внутри цикла, он будет добавлять "Hello, World!" и <br> после каждой итерации цикла.

Но, если мы запустим этот код после того, как документ полностью загрузится, то всё содержимое документа будет перезаписано при каждом вызове document.write(). Таким образом, результаты будут видны только для последнего вызова, то есть весь остальной контент будет перезаписан, и на экране мы увидим только "Конец".

Если мы попробуем запустить этот код в среде, которая поддерживает document.write(), мы увидит, что "Начало" и "Конец" отображаются только один раз, а "Hello, World!" будет отображаться только для последнего вызова, который перезаписывает остальной контент.
*/
