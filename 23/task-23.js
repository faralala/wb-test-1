/*
23. Анализатор сложности пароля: создайте функцию, которая оценивает сложность введенного пользователем пароля. Необходимо анализировать длину пароля,использование различных символов, наличие чисел и букв в разных регистрах.Выведите пользователю оценку сложности пароля и предложите улучшения, если пароль слишком слабый.
 */
// Создаём функцию
function passwordAnalyze(password) {
	// Функция проверки на нижний регистр
	function lowerCase(str) {
		return /[a-z]/.test(str)
	}
	// Функция проверки на верхний регистр
	function upperCase(str) {
		return /[A-Z]/.test(str)
	}
	// Проверка на длину пароля если >= 8 вернём 2 иначе 0
	const lengthScore = password.length >= 8 ? 2 : 0
	// Проверка на спец символы если есть вернём 2 иначе 0
	const characterScore = /[!@#$%^&*()_+=\-[\]{};':"\\|,.<>/?]/.test(password) ? 2 : 0
	// Проверка на цифры если есть вернём 2 иначе 0
	const digitScore = /\d/.test(password) ? 2 : 0
	// Проверка на нижний регистр букв если есть вернём 2 иначе 0
	const lowerCaseScore = lowerCase(password) ? 2 : 0
	// Проверка на верхний регистр букв если есть вернём 2 иначе 0
	const upperCaseScore = upperCase(password) ? 2 : 0
	// общий результат
	const totalScore = lengthScore + characterScore + digitScore + lowerCaseScore + upperCaseScore
	// Рекомендации, если общий результат меньше 6 то возвращаем рекомендацию и если  общий результат меньше 10 то возвращаем рекомендацию иначе Сильный пароль,который выполняется всем условиям
	if (totalScore < 6) {
		return 'Слабый пароль. Рекомендуется использовать буквы в разных регистрах, цифры и пароль должен быть длиннее 8 символов.'
	} else if (totalScore < 10) {
		return 'Средний пароль. Можно улучшить, добавив больше символов в разных регистрах и цифр.'
	} else {
		return 'Сильный пароль.'
	}
}
// Тестовый пароль
const userPassword = 'Pa@sswor1d'
// Проверка пароля
const result = passwordAnalyze(userPassword)
// Вывод в консоль
console.log(result)
